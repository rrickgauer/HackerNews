import { DateTime } from "./Constants";



export default class Dates
{   
    /**
     * Returns the time difference between a datetime and now.
     * 
     * @param {Constants.DateTime} a_dtDateTime - the datetime object
     * 
     * @returns {Object} diff - The point generated by the factory.
     * @returns {number} diff.years - Difference in years
     * @returns {number} diff.months - Difference in months
     * @returns {number} diff.days - Difference in days
     * @returns {number} diff.hours - Difference in hours
     * @returns {number} diff.minutes - Difference in minutes
     * @returns {number} diff.seconds - Difference in seconds
     */
    static getDiffNow(a_dtDateTime) {
        const diff = DateTime.now().diff(a_dtDateTime, Dates.DIFF_UNITS);
        return diff.values;
    }

    /**
     * Generate the date difference display string.
     */
    static getDiffDisplayString(a_dtDiff) {
        let numUnits = null;
        let unitType = null;
        
        if (a_dtDiff.days > 0) {
            numUnits = a_dtDiff.days;
            unitType = 'day';
        } else if (a_dtDiff.hours > 0) {
            numUnits = a_dtDiff.hours;
            unitType = 'hour';
        } else if (a_dtDiff.minutes > 1) {
            numUnits = a_dtDiff.minutes;
            unitType = 'minute';
        } 
        
        // item was created less than a minute ago
        if (null in [numUnits, unitType]) {
            return 'just now';
        }

        // append an s if there is more than 1 of the units
        if (numUnits > 1) {
            unitType += 's';
        }

        // throw them all together
        let result = `${numUnits} ${unitType} ago`;

        return result;
    }

}

/** Time difference units */
Dates.DIFF_UNITS = ["years", "months", "days", "hours", "minutes", "seconds"];

